(setf (cdr eshell-mode-map) nil)
(define-key eshell-mode-map (kbd "<M-u>") 'jd:eshell-beginning-of-line-or-prompt)
(define-key eshell-mode-map (kbd "<C-M-i>")
  (lambda ()
    (interactive "^")
    (if (equal (line-number-at-pos) (count-lines (point-max) (point-min)))
        (eshell-previous-input 1)
      (progn
        (scroll-down-line 1)
        (forward-line -1)))))
(define-key eshell-mode-map (kbd "<C-M-k>")
  (lambda ()
    (interactive "^")
    (if (equal (line-number-at-pos) (count-lines (point-max) (point-min)))
        (eshell-next-input 1)
      (progn
        (scroll-down-line -1)
        (forward-line 1)))))
(define-key eshell-mode-map (kbd "<C-c> <C-c>") 'eshell-interrupt-process)
(define-key eshell-mode-map (kbd "<C-c> <C-d>") 'eshell-send-eof-to-process)
(define-key eshell-mode-map (kbd "<C-c> <C-l>") 'jd:eshell-clear-buffer)
(define-key eshell-mode-map (kbd "<C-c> <C-r>") 'jd:counsel-esh-history)
(define-key eshell-mode-map (kbd "<jd:ret>") 'jd:incredibly-smart-return)
(define-key eshell-mode-map (kbd "<jd:tab>") 'completion-at-point)

(provide 'jd:esh-mode-kb.el)
