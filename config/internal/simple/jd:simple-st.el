;; Faces.
(defvar next-error)

;; Customization variables.
(defvar async-shell-command-buffer)
(defvar async-shell-command-display-buffer)
(defvar auto-fill-inhibit-regexp)
(defvar backward-delete-char-untabify-method)
(defvar blink-matching-delay)
(defvar blink-matching-paren)
(defvar blink-matching-paren-distance)
(defvar blink-matching-paren-dont-ignore-comments)
(defvar blink-matching-paren-on-screen)
(defvar completion-show-help)
(defvar compose-mail-user-agent-warnings)
(defvar delete-active-region)
(defvar delete-trailing-lines)
(defvar eval-expression-debug-on-error)
(defvar eval-expression-print-length)
(defvar eval-expression-print-level)
(defvar eval-expression-print-maximum-character)
(defvar extended-command-suggest-shorter)
(defvar fill-prefix)
(defvar global-mark-ring-max)
(defvar goal-column)
(defvar idle-update-delay)
(defvar kill-append-merge-undo)
(defvar kill-do-not-save-duplicates)
(defvar kill-read-only-ok)
(defvar kill-ring-max)
(defvar kill-whole-line)
(defvar line-move-ignore-invisible)
(defvar line-move-visual)
(defvar mail-user-agent)
(defvar mark-ring-max)
(defvar minibuffer-history-case-insensitive-variables)
(defvar next-error-highlight)
(defvar next-error-highlight-no-select)
(defvar next-error-hook)
(defvar next-error-recenter)
(defvar next-line-add-newlines)
(defvar normal-erase-is-backspace)
(defvar password-word-equivalents)
(defvar read-mail-command)
(defvar read-quoted-char-radix)
(defvar save-interprogram-paste-before-kill)
(defvar set-mark-command-repeat-pop)
(defvar shell-command-dont-erase-buffer)
(defvar shift-select-mode)
(defvar suggest-key-bindings)
(defvar track-eol)
(defvar undo-ask-before-discard)
(defvar use-empty-active-region)
(defvar visual-line-fringe-indicators)
(defvar yank-excluded-properties)
(defvar yank-handled-properties)
(defvar yank-pop-change-selection)

(column-number-mode 1)
(size-indication-mode 1)

;; Force point to tail the end of the `*Messages*` buffer.
;; Slight modification to:
;; https://stackoverflow.com/questions/4682033/in-emacs-can-i-set-up-the-messages-buffer-so-that-it-tails
(advice-add 'message :after
            (lambda (&rest _)
              (let* ((win (get-buffer-window "*Messages*"))
                     (buf (and win (window-buffer win))))
                (and win (not (equal (current-buffer) buf))
                     (set-window-point win (with-current-buffer buf (point-max)))))))

(jd:provide-feature jd:simple-st)
