possible strat for fixing ist: save-excursion, insert space, go back one char, check for comapany, if so leave excursion, ..
fix how ISM completes after I'm done spamming tab on a yasnippet
[ ] Configure:     Seperate the .elc files from the .el files
[ ] Configure:     Disable autoloading; instead load everything
[ ] Configure:     Proper Edebug setup (mirror of gdb)
[ ] Configure:     Normal and esoteric C/C++ formatting variables set (templates/lambdas/switch/etc.)
[ ] Configure:     All compilation warnings and Emacs startup warnings
[ ] Configure:     Theme (including modeline formatting stuff)
[ ] Configure:     GO OVER ALL CONFIGURATION FILES AGAIN AND LOOK AT/PLAY WITH ALL OF THEIR CORRESPONDING API's.
                   (in particuluar counsel looks like it has alot of good stuff)
                   - Customizable group variables; set them all accordingly in their respective files
                   - Look for similar functions that I can replace with these said better ones that I find in the APIs
                   - Optimize/refactor/properly replace the functions I've defined (ist/isd/etc.)
                   - Go through keymaps once more (including comint); this time edit
                     their functionality at the site-lisp level (on a fork of emacs along with byte
                     compilation scheme/fonts for maximum portability (include other dotfiles))
                     (PREFACE all modified standard functions that I have modified with comments/etc.)

[ ] Functionality: Proper `gdb' disassembly and proper scrolling to the top when opening headers (thing registers buffer)
[ ] Functionality: Proper integration of `tagproject' and its corresponding functionality
[ ] Functionality: Arbitrarily insert print statements incrementally and delete all at once (with specific bg color; C/C++/elisp)
[ ] Functionality: Goto compilation error in eshell with smart return
[ ] Functionality: Functions for a better display of key bindings in describe bindings

[ ] Standardize:   Proper hooks for initiating minor modes in major modes (look at how I use `company' for an example)
[ ] Standardize:   Convention for ordering defvar/defun/etc. in files
[ ] Standardize:   Decide to use lambdas or actual functions everywhere
[ ] Standardize:   Decide to fset or defadvice the chosen functions
[ ] Standardize:   progn all the functions
[ ] Standardize:   Decide what to macrotize
[ ] Standardize:   Figure minor mode initialization with either t or 1

[ ] Fix:           `edebug' will open source code in a window; throw an error if it's not already open.
[ ] Fix:           I can't insert a '*' in eshell
[ ] Fix:           xref random syntax highlighting; just make sure that the sources are
                   copied without properties; that should do it