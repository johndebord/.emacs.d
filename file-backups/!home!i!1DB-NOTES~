The database must be:
- Fast
- Concurrent and safe
- Transactions must run in full
- Both parties should ack eachother
- Scalable
- Always online
- Be permanent
- Distributed
- Be able to recognize user patterns
- Must handle unpredictable loads
- Easy to manage

According to the book (written in 2009) the peak of TP software SABRE surpassed 20,000 MPS

Workflow Architecture:
Send Form ---> Request Controller ---> Transaction Server ---> Database

Page 6 Paragraph 3:
"Database systems play a big role in supporting transaction programs, often a bigger role than the application programs themselves."

Page 9 Paragraph 4:
"The big airline systems have on the order of 100,000 display devices (terminals, ticket printers, and boarding-pass printers) and
thousands of disk drives, and execute thousands of transactions per second at their peak load."

Atomic
Consistent
Isolation
Durability

Problem I:
Start
  Record Withdrawal
  Dispense Money
  Crash <--- Whoops
  Commit

Problem II:
Start
  Record Withdrawal
  Commit
  Crash <--- Whoops
  Dispense Money

Any transaction that can be executed incorrectly should include a compensating transaction that reverses the effects

Log-based recovery is the strategy of logging all commits, then if the system crashes before the store, the commits
can be read from the log; after which the database can be updated; and then resumed

The `Two-Phase-Commit` protocol is executed by the `TransactionManager`

Two-Phase Commit Workflow Architecture:
Transaction        ---> TransactionManager
TransactionManager ---> ResourceManager ---> PREPARE-TO-STORE ---> ResourceManager ---> I'M-PREPARED-TO-STORE ---> TransactionManager
TransactionManager ---> ResourceManager ---> COMMIT           ---> ResourceManager ---> I'VE-COMMITED         ---> TransactionManager

Page 17 Paragraph 4:
"Two-phase commit is required whenever a transaction accesses two or more resource managers."
"Using two-phase commit adds overhead (due to two-phase commit messages), but the option to distribute can provide better scalability
(adding more systems to increase capacity) and availability (since one system can fail while others remain operational)."
