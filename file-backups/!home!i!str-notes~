basic_string();
explicit basic_string( const Allocator& alloc );
(until C++17)
basic_string() noexcept(noexcept( Allocator() )): basic_string( Allocator() ) {}
explicit basic_string( const Allocator& alloc ) noexcept;
(since C++17)
basic_string( size_type count, 
              CharT ch, 
              const Allocator& alloc = Allocator() );
(2)	
(3)	
basic_string( const basic_string& other, 
              size_type pos, 
              size_type count = std::basic_string::npos,
              const Allocator& alloc = Allocator() );
(until C++17)
basic_string( const basic_string& other,
              size_type pos,
              const Allocator& alloc = Allocator() );
(since C++17)
basic_string( const basic_string& other, 
              size_type pos, 
              size_type count,
              const Allocator& alloc = Allocator() );
(since C++17)
basic_string( const CharT* s,
              size_type count, 
              const Allocator& alloc = Allocator() );
(4)	
basic_string( const CharT* s,
              const Allocator& alloc = Allocator() );
(5)	
template< class InputIt >
basic_string( InputIt first, InputIt last, 
              const Allocator& alloc = Allocator() );
(6)	
basic_string( const basic_string& other );
(7)	
basic_string( const basic_string& other, const Allocator& alloc );
(7)	(since C++11)
basic_string( basic_string&& other ) noexcept;
(8)	(since C++11)
basic_string( basic_string&& other, const Allocator& alloc );
(8)	(since C++11)
basic_string( std::initializer_list<CharT> ilist, 
              const Allocator& alloc = Allocator() );
(9)	(since C++11)
template < class T >
explicit basic_string( const T& t, const Allocator& alloc = Allocator() );
(10)	(since C++17)
template < class T >
basic_string( const T& t, size_type pos, size_type n,
		    const Allocator& alloc = Allocator() );

--------------------------------------------------------------------------------

basic_string& operator=( const basic_string& str );
(1)	
(2)	
basic_string& operator=( basic_string&& str );
(since C++11) 
(until C++17)
basic_string& operator=( basic_string&& str ) noexcept(/* see below */);
(since C++17)
basic_string& operator=( const CharT* s );
(3)	
basic_string& operator=( CharT ch );
(4)	
basic_string& operator=( std::initializer_list<CharT> ilist );
(5)	(since C++11)
template<class T>
basic_string& operator=( const T& t );

--------------------------------------------------------------------------------

basic_string& assign( size_type count, CharT ch );
(1)	
basic_string& assign( const basic_string& str );
(2)	
(3)	
basic_string& assign( const basic_string& str,
                      size_type pos,
                      size_type count );
(until C++14)
basic_string& assign( const basic_string& str,
                      size_type pos,
                      size_type count = npos);
(since C++14)
(4)	
basic_string& assign( basic_string&& str );
(since C++11) 
(until C++17)
basic_string& assign( basic_string&& str ) noexcept(/* see below */);
(since C++17)
basic_string& assign( const CharT* s,
                      size_type count );
(5)	
basic_string& assign( const CharT* s );
(6)	
template< class InputIt >
basic_string& assign( InputIt first, InputIt last );
(7)	
basic_string& assign( std::initializer_list<CharT> ilist );
(8)	(since C++11)
template < class T >
basic_string& assign( const T& t );
(9)	(since C++17)
template < class T >
basic_string& assign( const T& t,
                      size_type pos,
                      size_type count = npos);

--------------------------------------------------------------------------------

allocator_type get_allocator() const;

--------------------------------------------------------------------------------

reference       at( size_type pos );
const_reference at( size_type pos ) const;


--------------------------------------------------------------------------------

reference       operator[]( size_type pos );
(1)	
const_reference operator[]( size_type pos ) const;

--------------------------------------------------------------------------------

CharT& front();
(since C++11)
const CharT& front() const;

--------------------------------------------------------------------------------

CharT& back();
(since C++11)
const CharT& back() const;

--------------------------------------------------------------------------------

const CharT* data() const;
(1)	
CharT* data();

--------------------------------------------------------------------------------

const CharT* c_str() const;

--------------------------------------------------------------------------------

operator std::basic_string_view<CharT, Traits>() const noexcept;
(since C++17)

--------------------------------------------------------------------------------

iterator begin();
const_iterator begin() const;
const_iterator cbegin() const;

--------------------------------------------------------------------------------

iterator end();
const_iterator end() const;
const_iterator cend() const;
(since C++11)


--------------------------------------------------------------------------------

everse_iterator rbegin();
const_reverse_iterator rbegin() const;
const_reverse_iterator crbegin() const;

--------------------------------------------------------------------------------

reverse_iterator rend();
const_reverse_iterator rend() const;
const_reverse_iterator crend() const;
(since C++11

--------------------------------------------------------------------------------

bool empty() const;
(until C++20)
[[nodiscard]] bool empty() const;

--------------------------------------------------------------------------------

size_type size() const;
(until C++11)
size_type size() const noexcept;
(since C++11)
size_type length() const;
(until C++11)
size_type length() const noexcept;
(since C++11)

--------------------------------------------------------------------------------

size_type max_size() const;


--------------------------------------------------------------------------------

void reserve( size_type new_cap = 0 );
(1)	(until C++20)
void reserve( size_type new_cap);
(1)	(since C++20)
void reserve();
(2)	(since C++20) 
(deprecated)

--------------------------------------------------------------------------------

size_type capacity() const;


--------------------------------------------------------------------------------

void shrink_to_fit();

--------------------------------------------------------------------------------

void clear();

--------------------------------------------------------------------------------

basic_string& insert( size_type index, size_type count, CharT ch );
(1)	
basic_string& insert( size_type index, const CharT* s );
(2)	
basic_string& insert( size_type index, const CharT* s, size_type count );
(3)	
basic_string& insert( size_type index, const basic_string& str );
(4)	
(5)	
basic_string& insert( size_type index, const basic_string& str,
                      size_type index_str, size_type count );
(until C++14)
basic_string& insert( size_type index, const basic_string& str,
                      size_type index_str, size_type count = npos);
(since C++14)
(6)	
iterator insert( iterator pos, CharT ch );
(until C++11)
iterator insert( const_iterator pos, CharT ch );
(since C++11)
(7)	
void insert( iterator pos, size_type count, CharT ch );
(until C++11)
iterator insert( const_iterator pos, size_type count, CharT ch );
(since C++11)
(8)	
template< class InputIt >
void insert( iterator pos, InputIt first, InputIt last );
(until C++11)
template< class InputIt >
iterator insert( const_iterator pos, InputIt first, InputIt last );
(since C++11)
iterator insert( const_iterator pos, std::initializer_list<CharT> ilist );
(9)	(since C++11)
template < class T >
basic_string& insert( size_type pos, const T& t );
(10)	(since C++17)
template < class T >
basic_string& insert( size_type index, const T& t,
                      size_type index_str, size_type count = npos);

--------------------------------------------------------------------------------

basic_string& erase( size_type index = 0, size_type count = npos );
(1)	
(2)	
iterator erase( iterator position );
(until C++11)
iterator erase( const_iterator position );
(since C++11)
(3)	
iterator erase( iterator first, iterator last );
(until C++11)
iterator erase( const_iterator first, const_iterator last );

--------------------------------------------------------------------------------

void push_back( CharT ch );

--------------------------------------------------------------------------------

void pop_back();

--------------------------------------------------------------------------------

basic_string& append( size_type count, CharT ch );
(1)	
basic_string& append( const basic_string& str );
(2)	
(3)	
basic_string& append( const basic_string& str,
                      size_type pos,
                      size_type count );
(until C++14)
basic_string& append( const basic_string& str,
                      size_type pos,
                      size_type count = npos );
(since C++14)
basic_string& append( const CharT* s, size_type count );
(4)	
basic_string& append( const CharT* s );
(5)	
template< class InputIt >
basic_string& append( InputIt first, InputIt last );
(6)	
basic_string& append( std::initializer_list<CharT> ilist );
(7)	(since C++11)
template < class T >
basic_string& append( const T& t );
(8)	(since C++17)
template < class T >
basic_string& append( const T& t, size_type pos,
                      size_type count = npos );

--------------------------------------------------------------------------------

basic_string& operator+=( const basic_string& str );
(1)	
basic_string& operator+=( CharT ch );
(2)	
basic_string& operator+=( const CharT* s );
(3)	
basic_string& operator+=( std::initializer_list<CharT> ilist );
(4)	(since C++11)
template < class T > 
basic_string& operator+=( const T& t );

--------------------------------------------------------------------------------

int compare( const basic_string& str ) const;
(until C++11)
int compare( const basic_string& str ) const noexcept;
(since C++11)
int compare( size_type pos1, size_type count1,
             const basic_string& str ) const;
(2)	
(3)	
int compare( size_type pos1, size_type count1,
             const basic_string& str,
             size_type pos2, size_type count2 ) const;
(until C++14)
int compare( size_type pos1, size_type count1,
             const basic_string& str,
             size_type pos2, size_type count2 = npos ) const;
(since C++14)
int compare( const CharT* s ) const;
(4)	
int compare( size_type pos1, size_type count1,
             const CharT* s ) const;
(5)	
int compare( size_type pos1, size_type count1,
             const CharT* s, size_type count2 ) const;
(6)	
template < class T >
int compare( const T& t ) const noexcept(/* see below */);
(7)	(since C++17)
template < class T >
int compare( size_type pos1, size_type count1,
             const T& t ) const;
(8)	(since C++17)
template < class T >
int compare( size_type pos1, size_type count1,
             const T& t,
             size_type pos2, size_type count2 = npos) const;

--------------------------------------------------------------------------------

bool starts_with(std::basic_string_view<CharT, Traits> x) const noexcept;
(1)	(since C++20)
bool starts_with(CharT x) const noexcept;
(2)	(since C++20)
bool starts_with(const CharT* x) const;

--------------------------------------------------------------------------------

bool ends_with(std::basic_string_view<CharT, Traits> x) const noexcept;
(1)	(since C++20)
bool ends_with(CharT x) const noexcept;
(2)	(since C++20)
bool ends_with(const CharT* x) const;

--------------------------------------------------------------------------------

basic_string& replace( size_type pos, size_type count,
                       const basic_string& str );
(1)	
basic_string& replace( const_iterator first, const_iterator last,
                       const basic_string& str );
(1)	
(2)	
basic_string& replace( size_type pos, size_type count,
                       const basic_string& str,
                       size_type pos2, size_type count2 );
(until C++14)
basic_string& replace( size_type pos, size_type count,
                       const basic_string& str,
                       size_type pos2, size_type count2 = npos );
(since C++14)
template< class InputIt >
basic_string& replace( const_iterator first, const_iterator last,
                       InputIt first2, InputIt last2 );
(3)	
basic_string& replace( size_type pos, size_type count,
                       const CharT* cstr, size_type count2 );
(4)	
basic_string& replace( const_iterator first, const_iterator last,
                       const CharT* cstr, size_type count2 );
(4)	
basic_string& replace( size_type pos, size_type count,
                       const CharT* cstr );
(5)	
basic_string& replace( const_iterator first, const_iterator last,
                       const CharT* cstr );
(5)	
basic_string& replace( size_type pos, size_type count,
                       size_type count2, CharT ch );
(6)	
basic_string& replace( const_iterator first, const_iterator last,
                       size_type count2, CharT ch );
(6)	
basic_string& replace( const_iterator first, const_iterator last, 
                       std::initializer_list<CharT> ilist );
(7)	(since C++11)
template < class T >
basic_string& replace( size_type pos, size_type count,
                       const T& t );
(8)	(since C++17)
template < class T >
basic_string& replace( const_iterator first, const_iterator last,
                       const T& t );
(8)	(since C++17)
template < class T >
basic_string& replace( size_type pos, size_type count, const T& t,
                       size_type pos2, size_type count2 = npos );
(9)

--------------------------------------------------------------------------------

basic_string substr( size_type pos = 0,
                     size_type count = npos ) const;

--------------------------------------------------------------------------------

size_type copy( CharT* dest,
                size_type count,
                size_type pos = 0) const;

--------------------------------------------------------------------------------

void resize( size_type count );
(1)	
void resize( size_type count, CharT ch );
(2)

--------------------------------------------------------------------------------

void swap( basic_string& other );
(until C++17)
void swap( basic_string& other ) noexcept(/* see below */);

--------------------------------------------------------------------------------
