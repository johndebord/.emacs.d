Email to James Altucher:

Hi James,

I've recently put together a curriculum for myself to further advance my knowledge of developing software. There are around 14 books that I want to get through by the end of the year. And so far I'm about half-way through the first  (The C++ Programming Language by Bjarne Stroustrup).

Question I:
I already know C++ relatively well, but I'm trying my best to fully comprehend each section of this book (putting forth more effort than usual into this one particular because Bjarne is the author of language). My reasoning is that if I can fully comprehend each section/sub-section and encounter the abstraction in the future, I will have already known that at one point in time I already figured it out, thus being able to short-circuit a knowledge fart/go to the reference if need be and carry on; as opposed to going off on a tangent comprehending an abstraction that would be completely new to me. So I'm probably spending about 20 minutes on average per page (when delving into the real technical meat), logically highlighting terms, best practices, new knowledge,  things to keep in mind, and writing in the margins to interact with the book/my thoughts. And I was wondering if this is a good strategy?

Question II:
Since I have 14 books that I'm trying to get through (and that count might double), should I be reading multiple books at a time? Even if I'm not 100% "ready" for the next material? If so, should I be apply the same strategy as described above? Or something completely different/a mixture of the two? Or is that a waste of time?

If you read all of this, I really appreciate your time.

Best,
John
