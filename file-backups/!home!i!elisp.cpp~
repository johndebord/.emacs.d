// #include <iostream>

#include <cstdio>

// #include <alloca.h>
// #include <setjmp.h>
// #include <stdalign.h>
// #include <stdarg.h>
// #include <stddef.h>
// #include <string.h>
// #include <float.h>
// #include <inttypes.h>
#include <limits.h>

// using namespace std;

// template<typename T>
// constexpr T max(T a, T b) { return (a > b) ? a : b; }

// template<typename T>
// constexpr T min(T a, T b) { return (a < b) ? a : b; }

// // enum class Lisp_Bits {
// //     /* Number of bits in a Lisp_Object value, not counting the tag.  */
// //     VALBITS = EMACS_INT_WIDTH - GCTYPEBITS,

// //     /* Number of bits in a Lisp fixnum value, not counting the tag.  */
// //     FIXNUM_BITS = VALBITS + 1
// // };

int main() {
    // cout << INT_WIDTH << endl;
    printf("%d\n",BITSIZEOF_SIZE_T);
    
    return 0;
}
